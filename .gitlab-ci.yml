stages:
  - build
  - staging
  - release

variables:
  PROJECT_DEV_NAME: open-genes-dev
  PROJECT_STAGE_NAME: open-genes-stage
  PROJECT_NAME: open-genes

build-dev:
  stage: build
  image: alexsuch/angular-cli:7.3.8
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/
  when: manual
  except:
    - master

build-staging:
  stage: build
  image: alexsuch/angular-cli:7.3.8
  script:
    - npm install
    - npm run build-staging
  artifacts:
    paths:
      - dist/
  when: manual
  except:
    - master

build-prod:
  stage: build
  image: alexsuch/angular-cli:7.3.8
  script:
    - npm install
    - npm run build-prod
  artifacts:
    paths:
      - dist/
  when: manual
  only:
    - master

deploy-dev:
  extends: .deploy
  dependencies:
    - build-dev
  environment:
    name: develop
  variables:
    PROJECT_DIR: /var/www/${PROJECT_DEV_NAME}
  except:
    - master

deploy-stage:
  extends: .deploy
  dependencies:
    - build-staging
  environment:
    name: stage
  variables:
    PROJECT_DIR: /var/www/${PROJECT_STAGE_NAME}
  except:
    - master

deploy-prod-to-dev:
  extends: .deploy
  dependencies:
    - build-prod
  environment:
    name: develop
  variables:
    PROJECT_DIR: /var/www/${PROJECT_DEV_NAME}
  only:
    - master

deploy-prod-to-stage:
  extends: .deploy
  dependencies:
    - build-prod
  environment:
    name: develop
  variables:
    PROJECT_DIR: /var/www/${PROJECT_STAGE_NAME}
  only:
    - master

deploy-prod:
  extends: .deploy
  dependencies:
    - build-prod
  stage: release
  environment:
    name: production
  variables:
    PROJECT_DIR: /var/www/${PROJECT_NAME}
  only:
    - master

.deploy:
  stage: staging
  image: instrumentisto/rsync-ssh
  script:
    - rsync -zhrl -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' dist/frontend/ ${DROPLET_USER}@${DROPLET_IP}:${PROJECT_DIR}/frontend/
  before_script:
    - mkdir ~/.ssh
    - echo ${DROPLET_KEY} | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  when: manual
